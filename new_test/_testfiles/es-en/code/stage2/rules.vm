#<assembly>
#<interchunk>
push-str fifrase
push-str yes
storev
push-str que_cnjsub
push-str no
storev
jmp section_rules_start
macro_f_bcond_start:
pushsb 1
push-str  
cmp
not
jz when_0_end
pushsb 1
out 1
jmp choose_0_end
when_0_end:
choose_0_end:
macro_f_bcond_end: ret
macro_generate_subject_start:
push-int 1
push-int 0
clip
push-int 1
inig
jz when_1_end
push-var fifrase
push-str yes
cmp
jz when_2_end
push-int 1
push-int 2
clip
push-str <imp>
cmp
push-int 1
push-int 2
clip
push-str <inf>
cmp
or 2
not
jz when_3_end
push-str subj
push-int 1
get-case-from
modify-case
push-str <prn><subj>
push-int 1
push-int 3
clip
push-str <GD>
push-int 1
push-int 4
clip
push-str {^
push-str prpers
push-int 1
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
push-int 1
push-int 0
clip
case-of
push-str Aa
cmp
jz when_4_end
push-int 1
push-int 0
push-int 1
push-int 0
clip
push-str aa
modify-case
storecl
jmp choose_4_end
when_4_end:
choose_4_end:
jmp choose_3_end
when_3_end:
choose_3_end:
jmp choose_2_end
when_2_end:
choose_2_end:
jmp choose_1_end
when_1_end:
choose_1_end:
macro_generate_subject_end: ret
section_rules_start:
patterns_start:
push-str lem
store-lp 0
push-str verbcj|adv_verbcj|aux_verb|adv_aux_verb|haver_pp|haver_adv_pp|haver_pp_enc|aux_haver_pp|aux_haver_adv_pp|aux_haver_pp_enc|verbcj_enc|verbcj_ger|verbcj_ger_enc|tohavevblex
store-lp 1
push-str <inf>|<pres>|<past>|<pri>|<ifip>|<cni>|<fti>|<pp>|<ger>|<pprs>|<subs>|<imp>|<ifi>|<pii>|<pis>|<prs>
store-lp 2
push-str <p1>|<p2>|<p3>|<PD>
store-lp 3
push-str <sg>|<pl>|<sp>|<ND>
store-lp 4
push-str <SN><m><*>|<SN><f><*>|<SN><mf><*>|<SN><nt><*>|<SN><subj><*>|<SN><tn><*>|<SN><itg><*>|<SN><pos><*>
push-int 1
addtrie action_0_start
push-str <m>|<f>|<mf>|<GD>|<nt>
store-lp 5
push-str tags
store-lp 6
push-str chcontent
store-lp 7
push-str <SN><obj><*>
push-int 1
addtrie action_1_start
push-str haverhi<SV><*>|haverhi<SVneg><*>|haverhi_pp<SV><*>|haverhi_pp<SVneg><*>|aux_haverhi<SV><*>|aux_haverhi<SVneg><*>|aux_haverhi_pp<SV><*>|aux_haverhi_pp<SVneg><*>
push-str <SN><*>
push-int 2
addtrie action_2_start
push-str whole
store-lp 8
push-str <SN><*>
push-str haverhi<SV><*>|haverhi<SVneg><*>|haverhi_pp<SV><*>|haverhi_pp<SVneg><*>|aux_haverhi<SV><*>|aux_haverhi<SVneg><*>|aux_haverhi_pp<SV><*>|aux_haverhi_pp<SVneg><*>
push-str <SN><*>
push-int 3
addtrie action_3_start
push-str haverhi<SV><*>|haverhi<SVneg><*>|haverhi_pp<SV><*>|haverhi_pp<SVneg><*>|aux_haverhi<SV><*>|aux_haverhi<SVneg><*>|aux_haverhi_pp<SV><*>|aux_haverhi_pp<SVneg><*>
push-int 1
addtrie action_4_start
push-str <SN><m><*>|<SN><f><*>|<SN><mf><*>|<SN><nt><*>|<SN><subj><*>|<SN><tn><*>|<SN><itg><*>|<SN><pos><*>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 3
addtrie action_5_start
push-str <vblex>|<vbser>|<vbhaver>|<vbmod>|<vaux>
store-lp 9
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 2
addtrie action_6_start
push-str <SV><*>|<SVneg><*>
push-str <SA><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 3
addtrie action_7_start
push-str <SV><*>|<SVneg><*>
push-str <SA><*>
push-str de<PREP>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 4
addtrie action_8_start
push-str <SN><m><*>|<SN><f><*>|<SN><mf><*>|<SN><nt><*>|<SN><subj><*>|<SN><tn><*>|<SN><itg><*>|<SN><pos><*>
push-str <SV><*>|<SVneg><*>
push-str <SA><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 4
addtrie action_9_start
push-str <SN><m><*>|<SN><f><*>|<SN><mf><*>|<SN><nt><*>|<SN><subj><*>|<SN><tn><*>|<SN><itg><*>|<SN><pos><*>
push-str <SV><*>|<SVneg><*>
push-str <SA><*>
push-str de<PREP>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 5
addtrie action_10_start
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-int 1
addtrie action_11_start
push-str <cnjsub>|<cnjadv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-int 2
addtrie action_12_start
push-str <cnjsub>|<cnjadv>
push-str <adv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-int 3
addtrie action_13_start
push-str <cnjsub>|<cnjadv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 3
addtrie action_14_start
push-str <cnjsub>|<cnjadv>
push-str <adv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 4
addtrie action_15_start
push-str <cnjsub>|<cnjadv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SA><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 4
addtrie action_16_start
push-str <cnjsub>|<cnjadv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SA><*>
push-str de<PREP>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 5
addtrie action_17_start
push-str en<PREP>
push-str el que<rel><nn>|lo que<rel><nn>|<rel><adv>|cuanto<rel><nn>|que<rel><an>|el cual<rel><nn>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-int 3
addtrie action_18_start
push-str en<PREP>
push-str el que<rel><nn>|lo que<rel><nn>|<rel><adv>|cuanto<rel><nn>|que<rel><an>|el cual<rel><nn>
push-str <adv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-int 4
addtrie action_19_start
push-str en<PREP>
push-str el que<rel><nn>|lo que<rel><nn>|<rel><adv>|cuanto<rel><nn>|que<rel><an>|el cual<rel><nn>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 4
addtrie action_20_start
push-str en<PREP>
push-str el que<rel><nn>|lo que<rel><nn>|<rel><adv>|cuanto<rel><nn>|que<rel><an>|el cual<rel><nn>
push-str <adv>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 5
addtrie action_21_start
push-str en<PREP>
push-str el que<rel><nn>|lo que<rel><nn>|<rel><adv>|cuanto<rel><nn>|que<rel><an>|el cual<rel><nn>
push-str verbcj<SV><*>|verbcj<SVneg><*>|adv_verbcj<SV><*>|adv_verbcj<SVneg><*>|aux_verb<SV><*>|aux_verb<SVneg><*>|adv_aux_verb<SV><*>|adv_aux_verb<SVneg><*>|haver_pp<SV><*>|haver_pp<SVneg><*>|haver_adv_pp<SV><*>|haver_adv_pp<SVneg><*>|haver_pp_enc<SV><*>|haver_pp_enc<SVneg><*>|aux_haver_pp<SV><*>|aux_haver_pp<SVneg><*>|aux_haver_adv_pp<SV><*>|aux_haver_adv_pp<SVneg><*>|aux_haver_pp_enc<SV><*>|aux_haver_pp_enc<SVneg><*>|verbcj_enc<SV><*>|verbcj_enc<SVneg><*>|verbcj_ger<SV><*>|verbcj_ger_enc<SV><*>|verbcj_ger<SVneg><*>|verbcj_ger_enc<SVneg><*>|modcj_inf_enc<SV><*>|modcj_inf<SV><*>
push-str <SA><*>
push-str <SV><vblex><inf>|<SVneg><vblex><inf>|<SV><vbhaver><inf>|<SVneg><vbhaver><inf>|<SV><vbser><inf>|<SVneg><vbser><inf>|<SV><vbmod><inf>|<SVneg><vbmod><inf>
push-int 5
addtrie action_22_start
push-str <sent>
push-int 1
addtrie action_23_start
push-str <SV><*>|<SVneg><*>
push-int 1
addtrie action_24_start
push-str <SA><*>
push-int 1
addtrie action_25_start
push-str <SP><*>
push-int 1
addtrie action_26_start
push-str <rel><*>
push-int 1
addtrie action_27_start
push-str <DET><*>
push-int 1
addtrie action_28_start
push-str que<cnjcoo>|que<cnjsub>
push-int 1
addtrie action_29_start
push-str tohavevblex<SV><*>
push-str num_year<SN><*>
push-int 2
addtrie action_30_start
push-str unknown<unknown>
push-int 1
addtrie action_31_start
patterns_end:
action_0_start:
push-int 1
push-int 5
clip
push-str <GD>
cmp
jz when_5_end
push-int 1
push-int 5
push-str <m>
storecl
jmp choose_5_end
when_5_end:
choose_5_end:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_6_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_6_end
when_6_end:
choose_6_end:
push-int 1
push-int 0
clip
push-int 1
push-int 6
clip
push-int 1
push-int 7
clip
chunk 3
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_0_end:
action_1_start:
push-int 1
push-int 5
clip
push-str <GD>
cmp
jz when_7_end
push-int 1
push-int 5
push-str <m>
storecl
jmp choose_7_end
when_7_end:
choose_7_end:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_8_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_8_end
when_8_end:
choose_8_end:
push-int 1
push-int 0
clip
push-int 1
push-int 6
clip
push-int 1
push-int 7
clip
chunk 3
out 1
push-str que_cnjsub
push-str no
storev
action_1_end:
action_2_start:
push-int 2
push-int 4
clip
push-str <ND>
cmp
push-int 2
push-int 4
clip
push-str <sp>
cmp
or 2
not
jz when_9_end
push-int 1
push-int 4
push-int 2
push-int 4
clip
storecl
jmp choose_9_end
when_9_end:
push-int 1
push-int 4
push-str <sg>
storecl
choose_9_end:
push-int 2
push-int 4
clip
push-str <ND>
cmp
jz when_10_end
push-int 2
push-int 4
push-str <sg>
storecl
jmp choose_10_end
when_10_end:
choose_10_end:
push-int 2
push-int 5
clip
push-str <GD>
cmp
jz when_11_end
push-int 2
push-int 4
push-str <m>
storecl
jmp choose_11_end
when_11_end:
choose_11_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
out 3
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_2_end:
action_3_start:
push-int 1
push-int 5
clip
push-str <GD>
cmp
jz when_12_end
push-int 1
push-int 5
push-str <m>
storecl
jmp choose_12_end
when_12_end:
choose_12_end:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_13_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_13_end
when_13_end:
choose_13_end:
push-int 3
push-int 4
clip
push-str <ND>
cmp
push-int 3
push-int 4
clip
push-str <sp>
cmp
or 2
not
jz when_14_end
push-int 2
push-int 4
push-int 3
push-int 4
clip
storecl
jmp choose_14_end
when_14_end:
push-int 2
push-int 4
push-str <sg>
storecl
choose_14_end:
push-int 3
push-int 4
clip
push-str <ND>
cmp
jz when_15_end
push-int 3
push-int 4
push-str <sg>
storecl
jmp choose_15_end
when_15_end:
choose_15_end:
push-int 3
push-int 5
clip
push-str <GD>
cmp
jz when_16_end
push-int 3
push-int 4
push-str <m>
storecl
jmp choose_16_end
when_16_end:
choose_16_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
out 5
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_3_end:
action_4_start:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_17_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_17_end
when_17_end:
choose_17_end:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_4_end:
action_5_start:
push-int 1
push-int 5
clip
push-str <GD>
cmp
jz when_18_end
push-int 1
push-int 5
push-str <m>
storecl
jmp choose_18_end
when_18_end:
choose_18_end:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_19_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_19_end
when_19_end:
choose_19_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 4
push-int 2
push-int 9
clip
push-str <vbmod>
cmp
push-int 2
push-int 9
clip
push-str <vaux>
cmp
or 2
not
jz when_20_end
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
out 2
jmp choose_20_end
when_20_end:
choose_20_end:
push-int 3
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_5_end:
action_6_start:
push-int 1
push-int 1
call generate_subject
push-int 1
push-int 8
clip
chunk 1
pushsb 1
out 2
push-int 1
push-int 9
clip
push-str <vbmod>
cmp
push-int 1
push-int 9
clip
push-str <vaux>
cmp
or 2
not
jz when_21_end
push-str to
push-int 2
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 2
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
out 2
jmp choose_21_end
when_21_end:
choose_21_end:
push-int 2
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_6_end:
action_7_start:
push-int 1
push-int 1
call generate_subject
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 3
push-int 8
clip
chunk 1
out 7
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_7_end:
action_8_start:
push-int 1
push-int 1
call generate_subject
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 4
push-int 8
clip
chunk 1
out 7
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_8_end:
action_9_start:
push-int 1
push-int 5
clip
push-str <GD>
cmp
jz when_22_end
push-int 1
push-int 5
push-str <m>
storecl
jmp choose_22_end
when_22_end:
choose_22_end:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_23_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_23_end
when_23_end:
choose_23_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 4
push-int 8
clip
chunk 1
out 9
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_9_end:
action_10_start:
push-int 1
push-int 5
clip
push-str <GD>
cmp
jz when_24_end
push-int 1
push-int 5
push-str <m>
storecl
jmp choose_24_end
when_24_end:
choose_24_end:
push-int 1
push-int 4
clip
push-str <ND>
cmp
jz when_25_end
push-int 1
push-int 4
push-str <sg>
storecl
jmp choose_25_end
when_25_end:
choose_25_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 5
push-int 8
clip
chunk 1
out 9
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_10_end:
action_11_start:
push-int 1
push-int 1
call generate_subject
push-int 1
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_11_end:
action_12_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
out 2
push-int 2
push-int 2
clip
push-str <imp>
cmp
not
jz when_26_end
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 2
push-int 3
clip
push-str <GD>
push-int 2
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_26_end
when_26_end:
choose_26_end:
push-int 2
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_12_end:
action_13_start:
push-int 3
push-int 2
clip
push-str <imp>
cmp
not
jz when_27_end
push-int 2
push-int 0
clip
push-str adv-interc
cmp
jz when_28_end
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
out 7
jmp choose_28_end
when_28_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
push-int 3
push-int 8
clip
chunk 1
out 7
choose_28_end:
jmp choose_27_end
when_27_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
out 5
choose_27_end:
push-str que_cnjsub
push-str yes
storev
action_13_end:
action_14_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
out 2
push-int 2
push-int 2
clip
push-str <imp>
cmp
not
jz when_29_end
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 2
push-int 3
clip
push-str <GD>
push-int 2
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_29_end
when_29_end:
choose_29_end:
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 2
push-int 2
push-int 9
clip
push-str <vbmod>
cmp
push-int 2
push-int 9
clip
push-str <vaux>
cmp
or 2
not
jz when_30_end
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 3
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
out 2
jmp choose_30_end
when_30_end:
choose_30_end:
push-int 3
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_14_end:
action_15_start:
push-int 3
push-int 2
clip
push-str <imp>
cmp
not
jz when_31_end
push-int 2
push-int 0
clip
push-str adv-interc
cmp
jz when_32_end
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
out 8
jmp choose_32_end
when_32_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
push-int 3
push-int 8
clip
chunk 1
pushsb 3
out 8
choose_32_end:
jmp choose_31_end
when_31_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
out 6
choose_31_end:
push-int 3
push-int 9
clip
push-str <vbmod>
cmp
push-int 3
push-int 9
clip
push-str <vaux>
cmp
or 2
not
jz when_33_end
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
out 2
jmp choose_33_end
when_33_end:
choose_33_end:
push-int 4
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_15_end:
action_16_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
out 2
push-int 2
push-int 2
clip
push-str <imp>
cmp
not
jz when_34_end
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 2
push-int 3
clip
push-str <GD>
push-int 2
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_34_end
when_34_end:
choose_34_end:
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 4
push-int 8
clip
chunk 1
out 7
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_16_end:
action_17_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
out 2
push-int 2
push-int 2
clip
push-str <imp>
cmp
not
jz when_35_end
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 2
push-int 3
clip
push-str <GD>
push-int 2
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_35_end
when_35_end:
choose_35_end:
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 5
push-int 8
clip
chunk 1
out 7
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_17_end:
action_18_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 4
push-int 3
push-int 2
clip
push-str <imp>
cmp
not
jz when_36_end
push-str subj
push-int 2
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 2
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_36_end
when_36_end:
choose_36_end:
push-int 3
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_18_end:
action_19_start:
push-int 3
push-int 0
clip
push-str adv-interc
cmp
jz when_37_end
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 4
push-int 4
push-int 2
clip
push-str <imp>
cmp
not
jz when_38_end
push-str subj
push-int 3
get-case-from
modify-case
push-str <prn><subj>
push-int 4
push-int 3
clip
push-str <GD>
push-int 4
push-int 4
clip
push-str {^
push-str prpers
push-int 3
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_38_end
when_38_end:
choose_38_end:
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-int 4
push-int 8
clip
chunk 1
out 3
jmp choose_37_end
when_37_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
out 6
push-int 4
push-int 2
clip
push-str <imp>
cmp
not
jz when_39_end
push-str subj
push-int 3
get-case-from
modify-case
push-str <prn><subj>
push-int 4
push-int 3
clip
push-str <GD>
push-int 4
push-int 4
clip
push-str {^
push-str prpers
push-int 3
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_39_end
when_39_end:
choose_39_end:
push-int 4
push-int 8
clip
chunk 1
out 1
choose_37_end:
push-str que_cnjsub
push-str yes
storev
action_19_end:
action_20_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 4
push-int 3
push-int 2
clip
push-str <imp>
cmp
not
jz when_40_end
push-str subj
push-int 3
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 3
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_40_end
when_40_end:
choose_40_end:
push-int 3
push-int 8
clip
chunk 1
pushsb 3
out 2
push-int 3
push-int 9
clip
push-str <vbmod>
cmp
push-int 3
push-int 9
clip
push-str <vaux>
cmp
or 2
not
jz when_41_end
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 4
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
out 2
jmp choose_41_end
when_41_end:
choose_41_end:
push-int 4
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_20_end:
action_21_start:
push-int 3
push-int 0
clip
push-str adv-interc
cmp
jz when_42_end
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 4
push-int 4
push-int 2
clip
push-str <imp>
cmp
not
jz when_43_end
push-str subj
push-int 3
get-case-from
modify-case
push-str <prn><subj>
push-int 4
push-int 3
clip
push-str <GD>
push-int 4
push-int 4
clip
push-str {^
push-str prpers
push-int 3
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_43_end
when_43_end:
choose_43_end:
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-int 4
push-int 8
clip
chunk 1
pushsb 4
out 4
jmp choose_42_end
when_42_end:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
push-int 3
push-int 8
clip
chunk 1
pushsb 3
out 6
push-int 4
push-int 2
clip
push-str <imp>
cmp
not
jz when_44_end
push-str subj
push-int 3
get-case-from
modify-case
push-str <prn><subj>
push-int 4
push-int 3
clip
push-str <GD>
push-int 4
push-int 4
clip
push-str {^
push-str prpers
push-int 3
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_44_end
when_44_end:
choose_44_end:
push-int 4
push-int 8
clip
chunk 1
pushsb 4
out 2
choose_42_end:
push-int 4
push-int 9
clip
push-str <vbmod>
cmp
push-int 4
push-int 9
clip
push-str <vaux>
cmp
or 2
not
jz when_45_end
push-str to
push-int 5
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 5
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
out 2
jmp choose_45_end
when_45_end:
choose_45_end:
push-int 5
push-int 8
clip
chunk 1
out 1
push-str que_cnjsub
push-str yes
storev
action_21_end:
action_22_start:
push-int 1
push-int 8
clip
chunk 1
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushsb 2
out 4
push-int 3
push-int 2
clip
push-str <imp>
cmp
not
jz when_46_end
push-str subj
push-int 3
get-case-from
modify-case
push-str <prn><subj>
push-int 3
push-int 3
clip
push-str <GD>
push-int 3
push-int 4
clip
push-str {^
push-str prpers
push-int 3
get-case-from
modify-case
push-str <prn><subj><3><4><5>
push-str $}
chunk 9
pushbl
out 2
jmp choose_46_end
when_46_end:
choose_46_end:
push-int 3
push-int 8
clip
chunk 1
pushsb 3
push-int 4
push-int 8
clip
chunk 1
pushsb 4
push-str to
push-int 5
get-case-from
modify-case
push-str <pr>
push-str {^
push-str to
push-int 5
get-case-from
modify-case
push-str <pr>
push-str $}
chunk 6
pushbl
push-int 5
push-int 8
clip
chunk 1
out 7
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_22_end:
action_23_start:
push-str fifrase
push-str yes
storev
push-int 1
push-int 8
clip
chunk 1
out 1
action_23_end:
action_24_start:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str yes
storev
action_24_end:
action_25_start:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_25_end:
action_26_start:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_26_end:
action_27_start:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_27_end:
action_28_start:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_28_end:
action_29_start:
push-var que_cnjsub
push-str yes
cmp
jz when_47_end
push-str que
push-int 1
get-case-from
modify-case
push-str <cnjsub>
push-str {^
push-str that
push-int 1
get-case-from
modify-case
push-str <cnjsub>
push-str $}
chunk 6
out 1
jmp choose_47_end
when_47_end:
push-int 1
push-int 8
clip
chunk 1
out 1
choose_47_end:
push-str que_cnjsub
push-str no
storev
action_29_end:
action_30_start:
push-int 1
push-int 1
call generate_subject
push-str verbcj
push-str <SV>
push-str {^
push-str be
push-str <vbser>
push-int 1
push-int 2
clip
push-int 1
push-int 3
clip
push-int 1
push-int 4
clip
push-str $}
chunk 9
pushsb 1
push-int 2
push-int 8
clip
chunk 1
pushbl
push-str nom
push-str <SN>
push-str {^
push-str old
push-str <adj>
push-str <sint>
push-str $}
chunk 7
out 5
action_30_end:
action_31_start:
push-int 1
push-int 8
clip
chunk 1
out 1
push-str fifrase
push-str no
storev
push-str que_cnjsub
push-str no
storev
action_31_end:
section_rules_end:
